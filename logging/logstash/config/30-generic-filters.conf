filter {

  if [type] == "alert" {
    mutate {
      remove_field => [ "groupKey" ]
    }
  }

  if [type] == "alert" and [foo] == "-" {
    mutate {
      add_field => { "container_name" => "alertmanager" }
      add_field => { "container_group" => "monitoring" }
      add_field => { "image_name" => "prom/alertmanager" }
      replace => { "message" => "%{commonAnnotations.summary} -- %{commonAnnotations.description}" }
    }
  }

  if [type] == "alert" and [message] {
    mutate {
      add_field => { "container_name" => "elastalert" }
      add_field => { "container_group" => "monitoring" }
      add_field => { "image_name" => "ivankrizsan/elastalert" }
    }
  } else if [type] == "alert" {
    mutate {
      add_field => { "container_name" => "alertmanager" }
      add_field => { "container_group" => "monitoring" }
      add_field => { "image_name" => "prom/alertmanager" }
      add_field => { "message" => "EMPTY" }
      replace => { "message" => "%{commonAnnotations.summary} -- %{commonAnnotations.description}" }
    }
  }


  # DEPRECATED IN 5.0, move to multiline handling to Input as codec
  # if "elasticsearch" in [container_name] {
  #   multiline {
  #       pattern => "^\s"
  #       what => "previous"
  #       negate => true
  #       source => "short_message"
  #       stream_identity => "%{host}.%{container_id}"
  #   }
  # }

  # adding (faking them) container-fields to filebeat which doesn't use docker's log-driver to ship logs
  if "filebeat-log" in [tags] {
    mutate {
      add_field => { "container_name" => "filebeat" }
      add_field => { "container_group" => "monitoring" }
      add_field => { "image_name" => "prima/filebeat" }
    }
  }

  grok {
    patterns_dir => ["/opt/logstash/patterns", "/opt/logstash/extra_patterns"]
    match => { "message" => "%{CUSTOM_LOGLEVEL:log_level}" }
  }

  mutate {
    uppercase => ["log_level"]
  }

}
