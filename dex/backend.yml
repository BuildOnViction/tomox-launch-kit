version: '3.3'
services:
  mongo0:
    hostname: mongo0
    image: mongo
    networks:
      - backend
    ports:
      - 27017:27017
    volumes:
      - ./datadir/datadir0:/data/db
    deploy:
      restart_policy:
        condition: on-failure
    entrypoint: [ "/usr/bin/mongod", "--bind_ip_all", "--replSet", "rs0" ]
  mongo1:
    hostname: mongo1
    image: mongo
    networks:
      - backend
    ports:
      - 27018:27017
    volumes:
      - ./datadir/datadir1:/data/db
    deploy:
      restart_policy:
        condition: on-failure
    entrypoint: [ "/usr/bin/mongod", "--bind_ip_all", "--replSet", "rs0" ]
  mongo2:
    hostname: mongo2
    image: mongo
    networks:
      - backend
    ports:
      - 27019:27017
    volumes:
      - ./datadir/datadir2:/data/db
    deploy:
      restart_policy:
        condition: on-failure
    entrypoint: [ "/usr/bin/mongod", "--bind_ip_all", "--replSet", "rs0" ]
  mongo-rs0-setup:
    image: mongo
    depends_on:
      - mongo0
      - mongo1
      - mongo2
    networks:
      - backend
    volumes:
      - ./scripts:/scripts
    environment:
      - MONGO0=mongo0
      - MONGO1=mongo1
      - MONGO2=mongo2
      - RS=rs0
    entrypoint: [ "/scripts/mongo.sh" ]

  rabbitmq:
    image: rabbitmq
    deploy:
      restart_policy:
        condition: on-failure
    networks:
      - backend
    ports:
      - '5672:5672'
      - '15672:15672'

  server:
    image: tomochain/tomox-sdk:latest
    deploy:
      restart_policy:
        condition: on-failure
    volumes:
      - $PWD/dex/config:/tomox/config
    ports:
      - "8080"
    networks:
      - backend
    depends_on:
      - mongo0
      - mongo1
      - mongo2
      - rabbitmq

volumes:
  db-data-1:
  db-data-2:
  db-data-3:

networks:
  backend:
    external: true
